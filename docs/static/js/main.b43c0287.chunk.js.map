{"version":3,"sources":["components/JokesList.js","components/Filters.js","components/PunchLine.js","components/App.js","index.js"],"names":["JokesList","props","jokes","Fragment","map","joke","id","setup","route","key","className","to","Filters","handleType","ev","inputType","target","value","htmlFor","type","name","onChange","checked","PunchLine","punchline","App","setState","renderPunchLine","routeId","parseInt","match","params","state","find","item","undefined","Jokes","this","filter","exact","path","filteredJokes","render","React","Component","ReactDOM","document","getElementById"],"mappings":"m/MAyBeA,MArBf,SAAmBC,GAAQ,IACjBC,EAAUD,EAAVC,MACR,OACE,kBAAC,IAAMC,SAAP,KACE,4BACGD,EAAME,KAAI,SAAAC,GAAS,IACVC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACNC,EAAK,gBAAYF,GACvB,OACE,wBAAIG,IAAKH,GACP,wBAAII,UAAU,kBAAkBH,GAChC,kBAAC,IAAD,CAAMI,GAAIH,GACR,4BAAQE,UAAU,aAAlB,wBC8BDE,MA5Cf,SAAiBX,GAEf,IAAMY,EAAa,SAACC,GAClBb,EAAMY,WAAW,CACfE,UAAWD,EAAGE,OAAOC,SAIzB,OACE,yBAAKP,UAAU,qBACb,wBAAIA,UAAU,cAAd,6BACA,0BAAMA,UAAU,iBACd,2BAAOA,UAAU,cAAcQ,QAAQ,QAAvC,WACA,2BACEC,KAAK,QACLC,KAAK,OACLH,MAAM,GACNI,SAAUR,EACVS,QAA2B,KAAlBrB,EAAMqB,UACjB,2BAAOZ,UAAU,cAAcQ,QAAQ,QAAvC,WACA,2BACEC,KAAK,QACLC,KAAK,OACLH,MAAM,UACNI,SAAUR,EACVS,QAA2B,YAAlBrB,EAAMqB,UACjB,2BAAOZ,UAAU,cAAcQ,QAAQ,QAAvC,mBACA,2BACEC,KAAK,QACLC,KAAK,OACLH,MAAM,cACNI,SAAUR,EACVS,QAA2B,gBAAlBrB,EAAMqB,UACjB,2BAAOZ,UAAU,cAAcQ,QAAQ,QAAvC,eACA,2BACEC,KAAK,QACLC,KAAK,OACLH,MAAM,cACNI,SAAUR,EACVS,QAA2B,gBAAlBrB,EAAMqB,a,QC3BVC,MAVf,SAAmBtB,GAAQ,IACjBuB,EAAcvB,EAAMC,MAApBsB,UACR,OAAO,yBAAKd,UAAU,SACpB,2BAAIc,GACJ,kBAAC,IAAD,CAAMb,GAAG,KACP,4BAAQD,UAAU,aAAlB,yBC0DSe,E,YAzDb,WAAYxB,GAAQ,IAAD,8BACjB,4CAAMA,KAQRY,WAAa,SAACE,GACZ,EAAKW,SACHX,IAXe,EA2BnBY,gBAAkB,SAAC1B,GACjB,IAAM2B,EAAUC,SAAS5B,EAAM6B,MAAMC,OAAOzB,IACtCD,EAAO,EAAK2B,MAAM9B,MAAM+B,MAAK,SAAAC,GACjC,OAAOA,EAAK5B,KAAOsB,KAErB,YAAaO,IAAT9B,EACK,kDAEA,kBAAC,EAAD,CAAWH,MAAOG,KAjC3B,EAAK2B,MAAQ,CACX9B,MAAOkC,EACPrB,UAAW,IAJI,E,6EAkBjB,IAAMb,EAAK,YAAOmC,KAAKL,MAAM9B,OACvBiB,EAAOkB,KAAKL,MAAMjB,UACxB,OAAOb,EACJoC,QAAO,SAAAjC,GACN,MAAgB,KAATc,GAAqBd,EAAKc,OAASA,O,+BAkB9C,OACE,yBAAKT,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACE3B,WAAYwB,KAAKxB,WACjBS,QAASe,KAAKL,MAAMjB,YACtB,kBAAC,EAAD,CAAWb,MAAOmC,KAAKI,mBAEzB,kBAAC,IAAD,CAAOD,KAAK,YAAYE,OAAQL,KAAKV,wB,GAlD7BgB,IAAMC,WCFxBC,IAASH,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OACaI,SAASC,eAAe,W","file":"static/js/main.b43c0287.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction JokesList(props) {\n  const { jokes } = props\n  return (\n    <React.Fragment>\n      <ul>\n        {jokes.map(joke => {\n          const { id, setup } = joke\n          const route = `/joke/${id}`\n          return (\n            <li key={id} >\n              <h3 className='title--medium '>{setup}</h3>\n              <Link to={route}>\n                <button className='form__btn'>Tell me more</button>\n              </Link>\n            </li>\n          )\n        })}\n      </ul>\n    </React.Fragment >)\n}\n\nexport default JokesList","import React from 'react';\n\nfunction Filters(props) {\n\n  const handleType = (ev) => {\n    props.handleType({\n      inputType: ev.target.value\n    })\n  }\n\n  return (\n    <div className='filter__container'>\n      <h2 className='title--big'>Selecciona tipo de chiste</h2>\n      <form className='filter__radio'>\n        <label className='form__label' htmlFor=\"type\">Toditos</label>\n        <input\n          type=\"radio\"\n          name='type'\n          value=''\n          onChange={handleType}\n          checked={props.checked === ''} />\n        <label className='form__label' htmlFor=\"type\">General</label>\n        <input\n          type=\"radio\"\n          name='type'\n          value='general'\n          onChange={handleType}\n          checked={props.checked === 'general'} />\n        <label className='form__label' htmlFor=\"type\">Programación</label>\n        <input\n          type=\"radio\"\n          name='type'\n          value='programming'\n          onChange={handleType}\n          checked={props.checked === 'programming'} />\n        <label className='form__label' htmlFor=\"type\">Knock-knock</label>\n        <input\n          type=\"radio\"\n          name='type'\n          value='knock-knock'\n          onChange={handleType}\n          checked={props.checked === 'knock-knock'} />\n      </form>\n    </div>\n  )\n}\nexport default Filters;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction PunchLine(props) {\n  const { punchline } = props.jokes\n  return <div className='punch'>\n    <p>{punchline}</p>\n    <Link to='/'>\n      <button className='card__btn'>Muy malo ¡Otro!</button>\n    </Link>\n  </div>\n}\n\nexport default PunchLine;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport '../stylesheets/App.scss';\nimport JokesList from './JokesList';\nimport Filters from './Filters';\nimport Jokes from '../data/data.json'\nimport PunchLine from './PunchLine';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: Jokes,\n      inputType: ''\n    }\n  }\n\n  //handler\n  handleType = (inputType) => {\n    this.setState(\n      inputType\n    )\n\n  }\n\n  //filters\n  filteredJokes() {\n    const jokes = [...this.state.jokes]\n    const type = this.state.inputType\n    return jokes\n      .filter(joke => {\n        return type === '' ? true : joke.type === type\n      })\n  }\n  //render\n\n  renderPunchLine = (props) => {\n    const routeId = parseInt(props.match.params.id)\n    const joke = this.state.jokes.find(item => {\n      return item.id === routeId\n    })\n    if (joke === undefined) {\n      return <p>Tu chiste no existe</p>\n    } else {\n      return <PunchLine jokes={joke} />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <Filters\n              handleType={this.handleType}\n              checked={this.state.inputType} />\n            <JokesList jokes={this.filteredJokes()} />\n          </Route>\n          <Route path='/joke/:id' render={this.renderPunchLine}>\n          </Route>\n        </Switch>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}